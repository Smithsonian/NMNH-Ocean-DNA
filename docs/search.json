[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SI Ocean DNA",
    "section": "",
    "text": "Welcome to the SI Ocean DNA landing page."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Here you can find documentation on best practices, data management, utility scripts, and data analysis pipelines."
  },
  {
    "objectID": "hydrascripts.html",
    "href": "hydrascripts.html",
    "title": "AISO_GetOrganelle_Hydra.sh",
    "section": "",
    "text": "All scripts below can be submitted as jobs on the NMNH Hydra cluster using qsub.\n\n[!NOTE] AISO refers to a script format with 4 required sections: ABOUT, INPUTS, SCRIPT, and OUTPUTS. The user should only need to modify the INPUTS section of the script\n\n\nAISO_GetOrganelle_Hydra.sh\n\n\nAISO_go_fetch.sh",
    "crumbs": [
      "advanced.qmd"
    ]
  },
  {
    "objectID": "utilityscripts.html",
    "href": "utilityscripts.html",
    "title": "batchRenameFiles.sh",
    "section": "",
    "text": "batchRenameFiles.sh\nScript to quickly rename many files. Can replace all (-m full) or part (-m partial) of the file names in a target directory.\nRequires the util-linux rename tool.\n\n[!WARNING] PLEASE consider making a backup of the target directory before running this script\n\nHelp documentation:\nSyntax: batchRenameFiles.sh [-h|d|t|m]\nOptions:\nh     Print this Help\nd     Directory containing files to rename\nt     Tab-delimited txt file with two columns:\n        First column: old file names or old strings in file names\n        Second column: new file names or new strings in file names\nm     File rename mode [full|partial]\n\n[!TIP] This script requires UNIX line endings for the -t names table. If you created your names table using Excel or a Windows computer, it may have DOS line endings. You can easily convert your table to the correct format using dos2unix.\n\nFull replacement mode example:\n# download the script\nwget https://raw.githubusercontent.com/dmacguigan/SI-Ocean-DNA/refs/heads/main/scripts/utils/batchRenameFiles.sh\n# make a test directory\nmkdir full_test\n# add some empty test files\ntouch full_test/S1.txt full_test/S2.txt full_test/S3.txt\n# print contents of the test directory\nls -l full_test\n# create a tab-delimited table of old and new file names\necho -e \"S1.txt\\tsample1.text\" &gt; names.txt\necho -e \"S2.txt\\tsample2.text\" &gt;&gt; names.txt\necho -e \"S3.txt\\tsample3.text\" &gt;&gt; names.txt\n# check the table format\ncat names.txt\n# run the script\nbash batchRenameFiles.sh -m full -d ./full_test -t names.txt\n# print contents of the test directory\nls -l full_test\nPartial replacement mode example:\n# download the script\nwget https://raw.githubusercontent.com/dmacguigan/SI-Ocean-DNA/refs/heads/main/scripts/utils/batchRenameFiles.sh\n# make a test directory\nmkdir partial_test\n# add some empty test files\ntouch partial_test/S1.txt partial_test/S2.txt partial_test/S3.txt partial_test/S1_S3.txt\n# print contents of the test directory\nls -l partial_test\n# create a tab-delimited table of old and new file names\necho -e \"S1\\tsample1\" &gt; names.txt\necho -e \"S2\\tsample2\" &gt;&gt; names.txt\necho -e \"S3\\tsample3\" &gt;&gt; names.txt\n# check the table format\ncat names.txt\n# run the script\nbash batchRenameFiles.sh -m partial -d ./partial_test -t names.txt\n# print contents of the test directory\nls -l partial_test\n\n\nrecursiveReplaceStrings.sh",
    "crumbs": [
      "Utility Scripts"
    ]
  },
  {
    "objectID": "bestpractices.html",
    "href": "bestpractices.html",
    "title": "Naming Conventions",
    "section": "",
    "text": "FASTQ and FASTA files contain biological sequence data, usually nucleotide or amino acid sequences. FASTQ files contain sequence quality information (for example, Phred/Q scores), while FASTA files contain only the sequence.\nFor sequence data generated by the Ocean DNA genome skimming project, it is helpful to have a universal format for file names. This will facilitate downstream file parsing and data management.\nIdeas for required fields: - Voucher/Catalog ID - Taxonomic ID (Family-Genus-Species?), no abbreviations - anything else?\nNeed to consider the issue of when the same sample is sequenced twice. Include a unique identifier based on sequencing batch, plate, and well?\nNO SPACES in file name. Use consistent delimiter (underscore? period? dash?) to separate fields in the file name. Delimiter must NOT be used within the fields. If a field is unknown for a specific sample, insert NA, do not skip the field.\nExample: NMNH-12345_Percidae-Etheostoma-olmstedi_OtherStuff.fastq.gz\nWhy is this helpful? Let’s imagine you wanted to create a table to species names from a recent sequencing run. With a consistent naming scheme for your files, it’s easy!\n# print list of unique species in my FASTQ files\nfind /PATH/TO/MY/DIRECTORY/*.fastq.gz -printf \"%f\\n\" | cut -f2 -d\"_\" | cut -f2,3 -d \"-\" | sort | uniq\nPlease keep FASTQ/A files gzip compressed to minimize disk space.\nCompress a file: gzip fileName.fastq\nDecompress a file (if needed): gunzip fileName.fastq.gz",
    "crumbs": [
      "Best Practices",
      "Naming Conventions"
    ]
  },
  {
    "objectID": "bestpractices.html#fastqa-sequence-data-files",
    "href": "bestpractices.html#fastqa-sequence-data-files",
    "title": "Naming Conventions",
    "section": "",
    "text": "FASTQ and FASTA files contain biological sequence data, usually nucleotide or amino acid sequences. FASTQ files contain sequence quality information (for example, Phred/Q scores), while FASTA files contain only the sequence.\nFor sequence data generated by the Ocean DNA genome skimming project, it is helpful to have a universal format for file names. This will facilitate downstream file parsing and data management.\nIdeas for required fields: - Voucher/Catalog ID - Taxonomic ID (Family-Genus-Species?), no abbreviations - anything else?\nNeed to consider the issue of when the same sample is sequenced twice. Include a unique identifier based on sequencing batch, plate, and well?\nNO SPACES in file name. Use consistent delimiter (underscore? period? dash?) to separate fields in the file name. Delimiter must NOT be used within the fields. If a field is unknown for a specific sample, insert NA, do not skip the field.\nExample: NMNH-12345_Percidae-Etheostoma-olmstedi_OtherStuff.fastq.gz\nWhy is this helpful? Let’s imagine you wanted to create a table to species names from a recent sequencing run. With a consistent naming scheme for your files, it’s easy!\n# print list of unique species in my FASTQ files\nfind /PATH/TO/MY/DIRECTORY/*.fastq.gz -printf \"%f\\n\" | cut -f2 -d\"_\" | cut -f2,3 -d \"-\" | sort | uniq\nPlease keep FASTQ/A files gzip compressed to minimize disk space.\nCompress a file: gzip fileName.fastq\nDecompress a file (if needed): gunzip fileName.fastq.gz",
    "crumbs": [
      "Best Practices",
      "Naming Conventions"
    ]
  },
  {
    "objectID": "qmd/utilityscripts.html",
    "href": "qmd/utilityscripts.html",
    "title": "batchRenameFiles.sh",
    "section": "",
    "text": "batchRenameFiles.sh\nSource code\nScript to quickly rename many files. Can replace all (-m full) or part (-m partial) of the file names in a target directory.\nRequires the util-linux rename tool.\n\n[!WARNING] PLEASE consider making a backup of the target directory before running this script\n\nHelp documentation:\nSyntax: batchRenameFiles.sh [-h|d|t|m]\nOptions:\nh     Print this Help\nd     Directory containing files to rename\nt     Tab-delimited txt file with two columns:\n        First column: old file names or old strings in file names\n        Second column: new file names or new strings in file names\nm     File rename mode [full|partial]\n\n[!TIP] This script requires UNIX line endings for the -t names table. If you created your names table using Excel or a Windows computer, it may have DOS line endings. You can easily convert your table to the correct format using dos2unix.\n\nFull replacement mode example:\n# download the script\nwget https://raw.githubusercontent.com/dmacguigan/SI-Ocean-DNA/refs/heads/main/scripts/utils/batchRenameFiles.sh\n# make a test directory\nmkdir full_test\n# add some empty test files\ntouch full_test/S1.txt full_test/S2.txt full_test/S3.txt\n# print contents of the test directory\nls -l full_test\n# create a tab-delimited table of old and new file names\necho -e \"S1.txt\\tsample1.text\" &gt; names.txt\necho -e \"S2.txt\\tsample2.text\" &gt;&gt; names.txt\necho -e \"S3.txt\\tsample3.text\" &gt;&gt; names.txt\n# check the table format\ncat names.txt\n# run the script\nbash batchRenameFiles.sh -m full -d ./full_test -t names.txt\n# print contents of the test directory\nls -l full_test\nPartial replacement mode example:\n# download the script\nwget https://raw.githubusercontent.com/dmacguigan/SI-Ocean-DNA/refs/heads/main/scripts/utils/batchRenameFiles.sh\n# make a test directory\nmkdir partial_test\n# add some empty test files\ntouch partial_test/S1.txt partial_test/S2.txt partial_test/S3.txt partial_test/S1_S3.txt\n# print contents of the test directory\nls -l partial_test\n# create a tab-delimited table of old and new file names\necho -e \"S1\\tsample1\" &gt; names.txt\necho -e \"S2\\tsample2\" &gt;&gt; names.txt\necho -e \"S3\\tsample3\" &gt;&gt; names.txt\n# check the table format\ncat names.txt\n# run the script\nbash batchRenameFiles.sh -m partial -d ./partial_test -t names.txt\n# print contents of the test directory\nls -l partial_test\n\n\nrecursiveReplaceStrings.sh\nSource code",
    "crumbs": [
      "Utility Scripts",
      "batchRenameFiles.sh"
    ]
  },
  {
    "objectID": "qmd/bestpractices.html",
    "href": "qmd/bestpractices.html",
    "title": "Naming Conventions",
    "section": "",
    "text": "FASTQ and FASTA files contain biological sequence data, usually nucleotide or amino acid sequences. FASTQ files contain sequence quality information (for example, Phred/Q scores), while FASTA files contain only the sequence.\nFor sequence data generated by the Ocean DNA genome skimming project, it is helpful to have a universal format for file names. This will facilitate downstream file parsing and data management.\nIdeas for required fields: - Voucher/Catalog ID - Taxonomic ID (Family-Genus-Species?), no abbreviations - anything else?\nNeed to consider the issue of when the same sample is sequenced twice. Include a unique identifier based on sequencing batch, plate, and well?\nNO SPACES in file name. Use consistent delimiter (underscore? period? dash?) to separate fields in the file name. Delimiter must NOT be used within the fields. If a field is unknown for a specific sample, insert NA, do not skip the field.\nExample: NMNH-12345_Percidae-Etheostoma-olmstedi_OtherStuff.fastq.gz\nWhy is this helpful? Let’s imagine you wanted to create a table to species names from a recent sequencing run. With a consistent naming scheme for your files, it’s easy!\n# print list of unique species in my FASTQ files\nfind /PATH/TO/MY/DIRECTORY/*.fastq.gz -printf \"%f\\n\" | cut -f2 -d\"_\" | cut -f2,3 -d \"-\" | sort | uniq\nPlease keep FASTQ/A files gzip compressed to minimize disk space.\nCompress a file: gzip fileName.fastq\nDecompress a file (if needed): gunzip fileName.fastq.gz",
    "crumbs": [
      "Best Practices",
      "Naming Conventions"
    ]
  },
  {
    "objectID": "qmd/bestpractices.html#fastqa-sequence-data-files",
    "href": "qmd/bestpractices.html#fastqa-sequence-data-files",
    "title": "Naming Conventions",
    "section": "",
    "text": "FASTQ and FASTA files contain biological sequence data, usually nucleotide or amino acid sequences. FASTQ files contain sequence quality information (for example, Phred/Q scores), while FASTA files contain only the sequence.\nFor sequence data generated by the Ocean DNA genome skimming project, it is helpful to have a universal format for file names. This will facilitate downstream file parsing and data management.\nIdeas for required fields: - Voucher/Catalog ID - Taxonomic ID (Family-Genus-Species?), no abbreviations - anything else?\nNeed to consider the issue of when the same sample is sequenced twice. Include a unique identifier based on sequencing batch, plate, and well?\nNO SPACES in file name. Use consistent delimiter (underscore? period? dash?) to separate fields in the file name. Delimiter must NOT be used within the fields. If a field is unknown for a specific sample, insert NA, do not skip the field.\nExample: NMNH-12345_Percidae-Etheostoma-olmstedi_OtherStuff.fastq.gz\nWhy is this helpful? Let’s imagine you wanted to create a table to species names from a recent sequencing run. With a consistent naming scheme for your files, it’s easy!\n# print list of unique species in my FASTQ files\nfind /PATH/TO/MY/DIRECTORY/*.fastq.gz -printf \"%f\\n\" | cut -f2 -d\"_\" | cut -f2,3 -d \"-\" | sort | uniq\nPlease keep FASTQ/A files gzip compressed to minimize disk space.\nCompress a file: gzip fileName.fastq\nDecompress a file (if needed): gunzip fileName.fastq.gz",
    "crumbs": [
      "Best Practices",
      "Naming Conventions"
    ]
  },
  {
    "objectID": "qmd/hydrascripts.html",
    "href": "qmd/hydrascripts.html",
    "title": "Hydra Analysis Scripts",
    "section": "",
    "text": "All scripts below can be submitted as jobs on the NMNH Hydra cluster using qsub.\n\n[!NOTE] AISO refers to a script format with 4 required sections: ABOUT, INPUTS, SCRIPT, and OUTPUTS. The user should only need to modify the INPUTS section of the script",
    "crumbs": [
      "Hydra Analysis Scripts",
      "Hydra Analysis Scripts"
    ]
  },
  {
    "objectID": "qmd/datamanagement.html",
    "href": "qmd/datamanagement.html",
    "title": "Workflow Diagram",
    "section": "",
    "text": "Workflow Diagram\n\n\n\n\n\ngraph TD;\n\n  GenoHub[**GenoHub**\nDemultiplexed and compressed sequence reads in FASTQ format. Files should end in “.fastq.gz” or “.fq.gz”. Is there any consistent naming scheme?]\n  Analyses(Run quality/adapter trimming, mitogenome assembly, etc)\n  Scratch[(**Hydra Scratch**\n/scratch/???/USER_ID\n40 TB. Not backed up. Might need automatic file purging to keep space clean.)]\n  Store[(**Hydra Store**\n/store/???/USER_ID\n40 TB. Not backed up. For non-active projects or large raw data files. Drive system is slower, can't be used for active analysis)]\n  XDrive[(**P Drive**\nP:&bsol;NMNH-OCEAN-DNA\nInitially 5 TB. Incrementally backed up daily, fully backed up weekly. Only accessible from SI computers.)]\n  GDrive[(**NOAA Google Drive**\nUnlimited storage space on NSL Google Shared Drive. Only accessible by NOAA employees.)]\n  \n  Rename(\"`Dan? renames FASTQ files following Best Practices Guide`\")\n\n  Move1[/Dan? downloads raw FASTQ files/]\n  Move2[/Dan? copies renamed raw FASTQs/]\n  Move3[/copy clean reads and final results/]\n  Move4[/Dan runs monthly backup/]\n\n  GenoHub--&gt;Move1\n  Move1--&gt;Scratch\n  subgraph \" \"\n    Scratch--&gt;Rename\n    Rename--&gt;Analyses\n    Rename--&gt;Move2\n    Move2--&gt;Store\n    Analyses--&gt;Move3\n    Move3--&gt;Store\n  end\n  Store--&gt;Move4\n  Move4--&gt;XDrive\n  Move4--&gt;GDrive\n\n  classDef process stroke:black,color:white,fill:#159BD7,stroke-dasharray: 5 5\n  classDef storage stroke:black,color:white,fill:#159BD7\n  classDef ccr stroke:black,color:white,fill:#159BD7\n\n  class Rename,Analyses,Move1,Move2,Move3,Move4 process\n  class GenoHub,Scratch,Store,XDrive,GDrive storage\n\n  click Rename \"https://github.com/dmacguigan/SI-Ocean-DNA/wiki/Best-Practices#sequence-data-file\"",
    "crumbs": [
      "Data Management",
      "Workflow Diagram"
    ]
  }
]